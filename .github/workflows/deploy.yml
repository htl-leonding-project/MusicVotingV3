name: Deploy to Server

on:
  push:
    branches:
      - main

env:
  DERBY_PORT: 1527
  QUARKUS_PORT: 8080
  ANGULAR_PORT: 4200

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Delete existing derby-create.sh on server
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'rm -f /tmp/derby-create.sh'

      - name: Upload and prepare derby-create.sh
        run: |
          scp -P ${{ secrets.SSH_PORT }} ./server/derby-create.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/derby-create.sh
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'chmod +x /tmp/derby-create.sh && rm -rf ./db && /tmp/derby-create.sh'

      - name: Delete existing derby-start.sh on server
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'rm -f /tmp/derby-start.sh'

      - name: Kill processes on specified ports
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo fuser -k $DERBY_PORT/tcp || true && sudo fuser -k $QUARKUS_PORT/tcp || true && sudo fuser -k $ANGULAR_PORT/tcp || true"

      - name: Upload and execute derby-start.sh
        run: |
          scp -P ${{ secrets.SSH_PORT }} ./server/derby-start.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/derby-start.sh
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'chmod +x /tmp/derby-start.sh && /tmp/derby-start.sh'

      - name: Build Quarkus project
        run: |
          cd server
          ./mvnw package

      - name: Upload Quarkus jar
        run: |
          scp -P ${{ secrets.SSH_PORT }} ./server/target/*-runner.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/quarkus-app.jar

      - name: Execute Quarkus jar
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "nohup java -jar /tmp/quarkus-app.jar &"

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Angular frontend
        run: |
          cd path/to/angular-project
          npm install
          npm run build --prod

      - name: Upload Angular frontend
        run: |
          scp -P ${{ secrets.SSH_PORT }} -r ./addMusic/dist/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/html

      - name: Run Angular frontend
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "nohup serve -s /var/www/html -l 80 &"
